<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net45;netstandard1.6</TargetFrameworks>
    <!-- Add the myget feed, without altering any other configurations. -->
    <!-- To allow building net framework targets on linux/macOS with dotnet cli -->
    <!-- See https://github.com/dotnet/sdk/issues/335 -->
    <RestoreAdditionalProjectSources>https://dotnet.myget.org/F/dotnet-core/api/v3/index.json</RestoreAdditionalProjectSources>

    <!-- Keep FSharp.Core version low to prevent downgrade warnings for consumers -->
    <FSharpCoreImplicitPackageVersion>4.2.*</FSharpCoreImplicitPackageVersion>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    
    <RootNamespace>FParsec_Pipes</RootNamespace>
    <AssemblyName>FParsec-Pipes</AssemblyName>
    <Authors>Robert Peele</Authors>
    <Description>A library for building FParsec parsers using pipeline operators.</Description>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageLicenseUrl>https://opensource.org/licenses/MIT</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/rspeele/FParsec-Pipes</PackageProjectUrl>
    <Copyright>Copyright 2016 Robert Peele</Copyright>
    <PackageTags>parser combinator f# fsharp c# csharp parsec fparsec pipe pipes</PackageTags>

    <PackageReleaseNotes>Minor performance improvements.</PackageReleaseNotes>

    <Version>0.4.0</Version>
    <FileVersion>0.4.0.0</FileVersion>
    <AssemblyVersion>$(FileVersion)</AssemblyVersion>
    <Version Condition="'$(VersionSuffix)' != ''">$(Version)-$(VersionSuffix)</Version>

  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <Tailcalls>false</Tailcalls>
    <OtherFlags>$(OtherFlags) --sig:bin/generated.fsi</OtherFlags>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' != 'Debug'">
    <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)/../../robert.peele.snk</AssemblyOriginatorKeyFile>
    <OtherFlags>$(OtherFlags) --warnon:1182</OtherFlags>
  </PropertyGroup>

  <ItemGroup>
    <!-- Taking rc version for FParsec to have netstandard + optimized builds support -->
    <!-- See https://github.com/stephan-tolksdorf/fparsec/issues/26 -->
    <PackageReference Include="FParsec" Version="1.0.4-RC3" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="Pipes.fs" />
    <Compile Include="DefaultParsers.fs" />
    <Compile Include="Many.fs" />
    <Compile Include="Precedence.fs" />
    
  </ItemGroup>

  <PropertyGroup Condition="'$(TargetFramework)'== 'net45'">
    <!-- Make .NET 4.5 reference assemblies available on any os -->
    <FrameworkPathOverride>$(NuGetPackageRoot)microsoft.targetingpack.netframework.v4.5/1.0.1/lib/net45/</FrameworkPathOverride>
  </PropertyGroup>
  
  <ItemGroup Condition="'$(TargetFramework)'== 'net45'">
      <!-- Make sure the reference assemblies are available -->
      <PackageReference Include="Microsoft.TargetingPack.NETFramework.v4.5"
                        Version="1.0.1" ExcludeAssets="All" PrivateAssets="All" />
      <!-- The DLL case has changed between 4.5 and 4.6; this avoids a warning. -->
      <Reference Include="System.XML" />
  </ItemGroup>

  <!-- See https://github.com/dotnet/netcorecli-fsc/issues/93 -->
  <Target Name="FsharpNetCoreAssemblyInfoWorkaround"
          AfterTargets="GetAssemblyVersion" BeforeTargets="GenerateAssemblyInfo">
    <PropertyGroup>
      <FsharpNetCoreAssemblyInfoFile>$(IntermediateOutputPath)$(AssemblyName).ExtraAssemblyInfo.fs</FsharpNetCoreAssemblyInfoFile>
<FsharpNetCoreAssemblyInfo><![CDATA[
namespace FParsec_Pipes.AssemblyInfo
open System.Reflection
[<assembly: System.Runtime.Versioning.TargetFrameworkAttribute("$(TargetFrameworkMoniker)", FrameworkDisplayName = "$(TargetFrameworkMonikerDisplayName)")>]
[<assembly: AssemblyConfiguration("$(Configuration)")>]
[<assembly: AssemblyCopyright("$(Copyright)")>]
[<assembly: AssemblyFileVersion("$(FileVersion)")>]
[<assembly: AssemblyInformationalVersion("$(InformationalVersion)")>]
[<assembly: AssemblyProduct("$(Product)")>]
[<assembly: AssemblyTitle("$(AssemblyName)")>]
[<assembly: AssemblyVersion("$(AssemblyVersion)")>]
do ()
]]></FsharpNetCoreAssemblyInfo>
    </PropertyGroup>
    <WriteLinesToFile File="$(FsharpNetCoreAssemblyInfoFile)" Lines="$(FsharpNetCoreAssemblyInfo)" Overwrite="true" Encoding="UTF-8" />
    <ItemGroup>
      <Compile Include="$(FsharpNetCoreAssemblyInfoFile)" />
    </ItemGroup>
  </Target>

</Project>
